Task: AstroConda
Install: false
Index: false
Metapackage: false
Description: AstroConda packages
 Here we list the packages that belong to the 
 [AstroConda](http://astroconda.readthedocs.io)
 distribution.

Depends: acstools
Homepage: http://acstools.readthedocs.io/
Pkg-Description: Python Tools for ACS (Advanced Camera for Surveys) Data

Depends: wfpc2tools
Homepage: http://www.stsci.edu/resources/software_hardware/stsci_python
Pkg-Description: Tools for use with the Wide Field and Planetary Camera 2

Depends: calcos
Homepage: https://github.com/spacetelescope/calcos
Pkg-Description: Calibration for HST/COS

Depends: hstcal
Homepage: https://github.com/spacetelescope/hstcal
Pkg-Description: Calibration for HST/WFC3, HST/ACS, and HST/STIS

Depends: nictools
Homepage: https://github.com/spacetelescope/nictools
Pkg-Description: Tools for HST/NICMOS

Depends: jwst-lib
Homepage: ssh://git@bitbucket.org/stsci_ssb/jwst.git
Pkg-Description: James Webb Space Telescope library

Depends: jwst-pipeline
Homepage: http://ssb.stsci.edu/doc/jwst_dev/jwst_pipeline.pipeline.doc.user_guide.doc/html/index.html
Pkg-Description: James Webb Space Telescope pipeline

Depends: jwst-tools
Homepage: ssh://git@bitbucket.org/stsci_ssb/jwst.git
Pkg-Description: James Webb Space Telescope tools

Depends: wfc3tools
Homepage: http://ssb.stsci.edu/doc/stsci_python_2.15.1/wfc3tools.doc/html/index.html
Pkg-Description: Tools for the Hubble Space Telescope Wide Field Camera 3

Depends: reftools
Homepage: http://www.stsci.edu/institute/software_hardware/pyraf/stsci_python
Pkg-Description: Tools for HST reference files

Depends: stistools
Homepage: http://www.stsci.edu/institute/software_hardware/pyraf/stsci_python
Pkg-Description: Tools for working with STIS data

Depends: costools
Homepage: http://www.stsci.edu/institute/software_hardware
Pkg-Description: Tools for working with COS data

Depends: crds
Homepage: http://www.stsci.edu/hst/observatory/crds/
Pkg-Description: Calibration Reference Data System

Depends: stsci.sphere
Homepage: http://ssb.stsci.edu/doc/stsci_python_x/stsci.sphere.doc/html/user.html
Pkg-Description: STScI's spherical geometry astropy package
 Python package for handling spherical polygons that represent arbitrary
 regions of the sky.sphere

Depends: stsci.skypac
Homepage: https://github.com/spacetelescope/stsci.skypac
Pkg-Description: Sky matching for image mosaic

Depends: stsci.sphinxext
Homepage: https://github.com/spacetelescope/stsci.sphinxext
Pkg-Description: Sphinx extension for STScI
 This project contains extensions to Sphinx to build documentation from
 STScI.

Depends: stsci.convolve
Homepage: https://github.com/spacetelescope/stsci.convolve
Pkg-Description: Subset of SciPy functionality for convolving
 Formerly included in SciPy as scipy.stsci.convolve.

Depends: python-stsci.distutils

Depends: stsci.image
Homepage: https://github.com/spacetelescope/stsci.image
Pkg-Description: Image array manipulation functions

Depends: stsci.imagemanip
Homepage: https://github.com/spacetelescope/stsci.imagemanip
Pkg-Description: STScI general image manipulation tools

Depends: stsci.imagestats
Homepage: https://github.com/spacetelescope/stsci.imagestats
Pkg-Description: Compute various useful statistical values for array objects

Depends: stsci.ndimage
Homepage: https://github.com/spacetelescope/stsci.ndimage
Pkg-Description: Fork of scipy.ndimage

Depends: stsci.numdisplay
Homepage: http://stsdas.stsci.edu/numdisplay
Pkg-Description: Visualize numpy array objects
 Visualize numpy array objects using image display tools like ds9 and ximtool
Remark:
 Latest Release from Dec 2009

Depends: stsci.stimage
Homepage: https://github.com/spacetelescope/stsci.stimage
Pkg-Description: Various functions for performing processing of images

Depends: stsci.tools
Homepage: https://github.com/spacetelescope/stsci.tools
Pkg-Description: STScI utility functions

Depends: asv
Homepage: http://asv.readthedocs.io/
Pkg-Description: Simple Python benchmarking tool with web-based reporting
 airspeed velocity (asv) is a tool for benchmarking Python packages over their
 lifetime. Runtime, memory consumption and even custom-computed values may be
 tracked. The results are displayed in an interactive web frontend that
 requires only a basic static webserver to host.

Depends: cube-tools
Homepage: https://github.com/spacetelescope/cube-tools
Pkg-Description: Data analysis package for cubes

Depends: fitsblender
Homepage: http://ssb.stsci.edu/doc/stsci_python_dev/fitsblender.doc/html/index.html
Pkg-Description: FITS header merging from multiple images.
 Given a list of FITS headers, aggregates values and creates a table made up
 of values from a number of headers, according to the given specification.

Depends: stwcs
Homepage: https://github.com/spacetelescope/stwcs
Pkg-Description: WCS based distortion models and coordinate transformation
 Recomputes the WCS of an HST observation and puts all distortion
 corrections in the headers.

Depends: specview
Homepage: https://github.com/spacetelescope/specview
Pkg-Description: Java spectrum visualization, manipulation, and fitting
 Specview is a tool for 1-D spectral visualization and analysis of
 astronomical spectrograms. Written in Java, it is capable of reading all
 the Hubble Space Telescope spectral data formats as well as data from
 several other instruments (such as IUE, FUSE, ISO, FORS and SDSS),
 preview spectra from MAST, and data from generic FITS and ASCII tables.
 It can read data from Virtual Observatory servers, and read and write
 spectrogram data in Virtual Observatory SED format. It can also read
 files in the SPC Galactic format used in the chemistry field. Once
 ingested, data can be plotted and examined with a large selection of
 custom settings. Specview supports instrument-specific data quality
 handling, flexible spectral units conversions, custom plotting
 attributes, plot annotations, tiled plots, hardcopy to JPEG files and
 PostScript file or printer, etc. Specview can be used to build wide-band
 SEDs, overplotting or combining data from the same astronomical source
 taken with different instruments and/or spectral bands. Data can be
 further processed with averaging, splicing, detrending, and Fourier
 filtering tools. Specview has a spectral model fitting capability that
 enables the user to work with multi-component models (including user-
 defined models) and fit models to data.

Depends: stginga
Homepage: https://github.com/spacetelescope/stginga
Pkg-Description: Ginga products specific to STScI data analysis

Depends: python-pyregion

Depends: python-asdf

Depends: asdf-standard
Homepage: http://asdf-standard.readthedocs.io/
Pkg-Description: Advanced Scientific Data Format documentation
 Advanced Scientific Data Format is a proposed replacement to the FITS
 standard for astronomical images and other astronomical data. The Metadata is
 contained in a YAML header followed by binary or ascii data.

Depends: astrolib.coords
Homepage: http://ssb.stsci.edu/doc/stsci_python_dev/astrolib.coords.doc/html/index.html
Pkg-Description: Astronomical coordinates & angular separations
 This package aims to provide much of the IDL "astron" functionality that
 pertains to coordinate manipulations in an OO framework. Our target user is a
 typical astronomer who needs to analyze data, work with catalogs, prepare
 observing proposals, and prepare for observing runs.

Depends: python-photutils

Depends: python-pyds9

Depends: libxpa-dev

Depends: libcfitsio-dev

Depends: saods9

Depends: wcstools

Depends: python-pysynphot

Depends: python-pywcs

Depends: pyraf
WNPP: 711038
Homepage: https://github.com/spacetelescope/pyraf
Pkg-Description: Python replacement for IRAF cl from STScI
 PyRAF is a command language for running IRAF tasks that is based on the
 Python scripting language. It gives users the ability to run IRAF tasks
 in an environment that has all the power and flexibility of Python.
 PyRAF can be installed along with an existing IRAF installation; users
 can then choose to run either PyRAF or the IRAF CL.

Depends: iraf
WNPP: 690531
Homepage: http://iraf.noao.edu
Pkg-Description: NOAO Image Reduction and Analysis Facility
 IRAF includes a broad selection of programs for general image processing
 and graphics, plus a large number of programs for the reduction and
 analysis of optical and IR astronomy data. Other external or layered
 packages are available for applications such as data acquisition or
 handling data from other observatories and wavelength regimes such as
 the Hubble Space Telescope (optical), EUVE (extreme ultra-violet), or
 ROSAT and AXAF (X-ray). These external packages are distributed
 separately from the main IRAF distribution but can be easily installed.
 The IRAF system also includes a complete programming environment for
 scientific applications, which includes a programmable Command Language
 scripting facility, the IMFORT Fortran/C programming interface, and the
 full SPP/VOS programming environment in which the portable IRAF system
 and all applications are written.

Depends: ginga
Homepage: https://github.com/ejeschke/ginga
Pkg-Description: The Ginga astronomical FITS file viewer
 Ginga is a viewer for astronomical data FITS (Flexible Image Transport
 System) files; the viewer centers around a FITS display widget which
 supports zooming and panning, color and intensity mapping, a choice of
 several automatic cut levels algorithms and canvases for plotting
 scalable geometric forms. In addition to this widget, the FITS viewer
 provides a flexible plugin framework for extending the viewer with many
 different features. A fairly complete set of "standard" plugins are
 provided for expected features of a modern viewer: panning and zooming
 windows, star catalog access, cuts, star pick/fwhm, thumbnails, and
 others.  This viewer was written by software engineers at Subaru
 Telescope, National Astronomical Observatory of Japan, and is in use at
 that facility.

Depends: python-astropy

Depends: imexam
Homepage: http://imexam.readthedocs.io
Pkg-Description: Simple image examination, and plotting, with similar functionality to IRAF's imexamine
 imexam is an AstroPy affiliated package meant for quick image analysis, much
 like the IRAF imexamine task. Image display is currently supported with
 either DS9 or a Ginga widget from a python session.

Depends: gwcs
Homepage: http://gwcs.readthedocs.io/
Pkg-Description: Tools for managing the WCS in a general way
 GWCS takes a general approach to WCS. It supports a data model which includes
 the entire transformation pipeline from input coordinates (detector by
 default) to world cooridnates. Transformations can be chained, joined or
 combined with arithmetic operators using the flexible framework of compound
 models in modeling. In the case of a celestial output frame coordinates
 provides further transformations between standard coordinate frames. Spectral
 output coordinates are instances of Quantity and are transformed to other
 units with the tools in that package. The goal is to provide a flexible
 toolkit which is easily extendable by adding new transforms and frames.

Depends: astroimtools
Homepage: http://astroimtools.readthedocs.io
Pkg-Description: Astronomical Image Convenience Tools
 Astroimtools is an open-source Python package to provide convenience tools
 for working with astronomical images.
 .
 This work is driven by the JWST Data Analysis Development Forum at the Space
 Telescope Science Institute.

Depends: drizzlepac
Homepage: http://drizzlepac.stsci.edu/
Pkg-Description: Align and combine HST images
 DrizzlePac allows users to easily and accurately align and combine HST
 images taken at multiple epochs, and even with different instruments. It
 is a suite of supporting tasks for AstroDrizzle which
 includes:astrodrizzle to align and combine imagestweakreg and tweakback
 for aligning images in different visitspixtopix transforms an X,Y pixel
 position to its pixel position after distortion correctionsskytopix
 transforms sky coordinates to X,Y pixel positions. A reverse
 transformation can be done using the task pixtosky.

Depends: python-numpy

Depends: python-pyfftw

Depends: poppy
Homepage: https://github.com/mperrin/poppy
Pkg-Description: Physical Optics Propagation in Python
 POPPY (Physical Optics Propagation in PYthon) simulates physical optical
 propagation including diffraction. It implements a flexible framework
 for modeling Fraunhofer and Fresnel diffraction and point spread
 function formation, particularly in the context of astronomical
 telescopes. POPPY provides the optical modeling framework for WebbPSF
 (ascl:1504.007) and was developed as part of a simulation package for
 JWST, but is available separately and is broadly applicable to many
 kinds of imaging simulations.

Depends: webbpsf
Homepage: http://www.stsci.edu/jwst/software/webbpsf/
Pkg-Description: WebbPSF: Simulated PSF for the James Webb Space Telescope
 WebbPSF provides a PSF simulation tool in a flexible and easy-to-use
 software package implemented in Python. Functionality includes support
 for spectroscopic modes of JWST NIRISS, MIRI, and NIRSpec, including
 modeling of slit losses and diffractive line spread functions.

Depends: libfftw3-dev

Depends: htc-utils
Homepage: http://bitbucket.org/jhunkeler/htc_utils
Pkg-Description: Homebrew set of HTCondor wrappers
  HTCondor is a specialized workload management system for compute-intensive
  jobs. Like other full-featured batch systems, HTCondor provides a job
  queueing mechanism, scheduling policy, priority scheme, resource monitoring,
  and resource management. Users submit their serial or parallel jobs to
  HTCondor, HTCondor places them into a queue, chooses when and where to run
  the jobs based upon a policy, carefully monitors their progress, and
  ultimately informs the user upon completion.
  .
  This package installs some home-rolled Condor utilities.

Depends: python-appdirs

Depends: python-d2to1

Depends: recon
Homepage: http://github.com/jhunkeler/recon
Pkg-Description: Release control for git
 RELIC stands for "Release I Control". This software attempts to automatically
 maintain a git project's version information without the need for hardcoded
 values in the source code. It is designed primarily for hardcore build
 maintainers, and is best used with continuous integration services (i.e
 Travis-CI, etc).

Depends: python-pytools

Depends: purge-path
Homepage: http://bitbucket.org/jhunkeler/purge_path
Pkg-Description: Small PATH manipulator

Depends: shunit2
